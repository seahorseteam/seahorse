package com.samsung.android.example.helloaccessoryprovider;

import android.app.Activity;
import android.os.Bundle;
import android.view.View;
import android.widget.EditText;
import android.widget.Toast;

import com.samsung.android.example.helloaccessoryprovider.service.R;
import com.samsung.android.sdk.accessory.SASocket;

/**
 * 기어2와 통신을 하기 위한 서비스 작성 예제 소스.
 * 
 * @author KKS
 * 
 */
public class MainActivity extends Activity {
	private GearMsgReceiveListener listener;
	private GearSocket socket;
	private EditText editText;
	private boolean bConnecting;
	private Runnable gearConnectRunnable = new Runnable() {
		@Override
		public void run() {
			bConnecting = true;
			while (bConnecting) {
				SASocket sock = GearService.getSocket();
				if (sock != null) {
					socket.setGearSocket(sock);
					bConnecting = false;
				}
			}
		}
	};

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);

		editText = (EditText) findViewById(R.id.editText);
		listener = new GearMsgReceiveListener() {
			@Override
			public void receivedData(String msg) {
				socket.sendMessage(msg + " fetch received.");
				Toast.makeText(getApplicationContext(), msg, Toast.LENGTH_LONG)
						.show();
			}
		};

		// Gear2 app 시작할 때 보여줄 단어
		GearService.setDefaultWords("Apple", "사과");
		// 내가 사용할 통신 매체.
		socket = new GearSocket();
		// 채널 설정. 이는 반드시 android의 profile.xml, tizen wearable의 profile.xml과 일치해야
		// 하며, main.js에서 쓰는 채널 값도 맞춰야 한다.
		socket.setAccessoryChannelID(104);
		// 기어에서 전달한 메시지를 받을 리스너.
		socket.addReceivedMsgListener(listener);
		connectGear();
	}

	public void sendMsg(View v) {
		String str = editText.getText().toString();
		try {
			if (socket.getGearSocket().isConnected() == false) {
				// SASocket 연결이 끊긴 경우 다시 연결.
				// Gear2 에서 연결을 신청해야 하는데 30초마다 Gear2에서 연결 요청을 한다.
				connectGear();
			}

			if (!str.equalsIgnoreCase("")) {
				socket.sendMessage(str);
				editText.setText("");
			}
		} catch (Exception e) {
			// socket lost.
			Toast.makeText(this, "기어와 연결이 끊겼습니다.", Toast.LENGTH_SHORT).show();
			connectGear();
			socket.sendMessage(str);
		}
	}

	// socket이 언제 연결이 될지 모른다. Thread로 계속해서 받는 순간을 체크한다.
	private void connectGear() {
		// 쓰레드 중복 실행 방지. sendMsg 연타하는 경우.
		if (bConnecting == false) {
			new Thread(gearConnectRunnable).start();
		}
	}

}
